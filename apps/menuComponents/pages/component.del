import '../../../libs/menu/components/text.del';
import '../_variables.del';

String PAGE_DEBUG_COMPONENT_ID: 'component';
String PAGE_DEBUG_COMPONENT_NAME: 'Base Component';

Number[] PageDebugComponentItems() {
  Number[] nonInteractive! = [];
  Number[] interactive! = [];

  for(Number i! = 0; i < 5; i++) {
    nonInteractive += AddComponent(Text.New($"Non-interactive {i + 1}"));

    String label: $"Interactive {i + 1}";
    interactive += AddComponent(Component.New(
      label: label,
      onEnter: () => Log($"{label}: enter"),
      onLeave: () => Log($"{label}: left"),
      onButtonDown: (button) => Log($"{label}: {button} button down"),
      onButtonUp: (button) => Log($"{label}: {button} button up"),
      onNavigate: (direction) => Log($"{label}: navigated {direction}"),
      onPrimaryAction: () => Log($"{label}: primary action"),
      onPrimaryActionDescription: "Trigger Primary Action", 
      onSecondaryAction: () => Log($"{label}: primary action"),
      onSecondaryActionDescription: "Trigger Secondary Action", 
      onTertiaryAction: () => Log($"{label}: primary action"),
      onTertiaryActionDescription: "Trigger Tertiary Action", 
      onQuaternaryAction: () => Log($"{label}: primary action"),
      onQuaternaryActionDescription: "Trigger Quaternary Action", 
    ));
  }

  return nonInteractive + [AddComponent(Text.New())] + interactive;
}

rule: 'Debug/Base Components'
Event.OngoingPlayer
if(menuState.CreatePageRequested(PAGE_DEBUG_COMPONENT_ID))
{
  // Log("------------- creating base components page");
  menuState.CreatePage(
    pageId: PAGE_DEBUG_COMPONENT_ID,
    title: PAGE_DEBUG_COMPONENT_NAME, 
    indexes: PageDebugComponentItems(), 
    descriptions: [
      Description.New("Every possible interaction will be logged to the Workshop Inspector", COLOR_INFO)
    ]
  );
}
