import '../_variables.del';

String PAGE_DEBUG_SPINNER_ID: 'spinner';
String PAGE_DEBUG_SPINNER_NAME: 'Spinner';

MenuItem[] PageDebugSpinnerItems() {
  Spinner integerSpinner = new Spinner(menuState, "Integer");
  integerSpinner.onChange = (value, it) => LogToInspector($"{it.text}: {value}");

  MenuItem integer = new MenuItem(child: integerSpinner);

  Spinner floatSpinner = new Spinner(
    menuState: menuState, 
    text: "Float",
    fractionalLength: 2
  );
  floatSpinner.onChange = (value, it) => LogToInspector($"{it.text}: {value}");

  MenuItem float = new MenuItem(child: floatSpinner);

  Spinner integerLongSpinner = new Spinner(
    menuState: menuState, 
    text: "Integer with 5 length and default value",
    integralLength: 5,
    defaultValue: 12345
  );
  integerLongSpinner.onChange = (value, it) => LogToInspector($"{it.text}: {value}");

  MenuItem integerLong = new MenuItem(child: integerLongSpinner);

  Spinner floatLongSpinner = new Spinner(
    menuState: menuState, 
    text: "Float with 4+1 length, default value and unit",
    defaultValue: -1234.5,
    integralLength: 4,
    fractionalLength: 1,
    negative: true,
    unit: '%'
  );
  floatLongSpinner.onChange = (value, it) => LogToInspector($"{it.text}: {value}");

  MenuItem floatLong = new MenuItem(child: floatLongSpinner);

  return [integer, float, integerLong, floatLong];
}

rule: 'Debug/Spinner'
Event.OngoingPlayer
if(menuState.currentMenuID == PAGE_DEBUG_SPINNER_ID)
{
  menuState.SetTitle(PAGE_DEBUG_SPINNER_NAME);
  menuState.AddItems(PageDebugSpinnerItems());
}
