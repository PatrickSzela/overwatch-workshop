import '../modifier.del';
import '../effects.del';

String HEALTH_EXCHANGE_NAME: 'Health Exchange';

playervar Boolean healthExchangeEnabled = false;

Modifier healthExchange: {
  name: HEALTH_EXCHANGE_NAME,
  notification: HEALTH_EXCHANGE_NAME,
  icon: AbilityIconString(Hero.Moira, Button.Ability2),
  duration: 10, 
  enabled: SettingToggle(HEALTH_EXCHANGE_NAME),
  preload: () => {
    foreach(Player player in AllPlayers()) {
      CreatePlayerEffect(player, Effect.BadAura, 1, Color.Violet);
      CreatePlayerEffect(player, Effect.ZenyattaOrbOfDiscordTargetSound, 100);

      Wait();
    }
  },
  enable: () => {
    foreach(Player player in AllPlayers()) {
      player.healthExchangeEnabled = true;
    }
  },
  disable: () => {
    foreach(Player player in AllPlayers()) {
      DestroyPlayerEffects(player);
      player.healthExchangeEnabled = false;
    }
  },
  ..MODIFIER_BASE
};

rule: '[Health Exchange] Heal on dealing damage'
Event.OnDamageDealt
if(healthExchangeEnabled)
{
  if(Victim() != EventPlayer()) {
    Heal(EventPlayer(), EventPlayer(), EventDamage() * 0.25);
  }
}

rule: '[Health Exchange] Deal damage on healing'
Event.OnHealingDealt
if(healthExchangeEnabled)
{
  if(Healee() != EventPlayer()) {
    Damage(EventPlayer(), EventPlayer(), EventHealing() * 0.5);
  }
}

