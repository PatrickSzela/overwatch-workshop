import '../modifier.del';
import '../utils/duplicate.del';

String PRIMAL_RAGE_NAME: 'Primal Rage';
Number PRIMAL_RAGE_DURATION: 10 + 0.25;
Number PRIMAL_RAGE_HEALTH: 350;

Modifier primalRage: Modifier.New(
  name: PRIMAL_RAGE_NAME, 
  duration: PRIMAL_RAGE_DURATION,
  canDurationBeExtended: false,
  description: ["Winton is angy"]
);

rule: '[Primal Rage] Is Preloading'
Event.OngoingPlayer
if(ModifierIsPreloading(PRIMAL_RAGE_NAME))
{
  PreloadDuplicate(EventPlayer(), Hero.Winston, true, true, false);
}

rule: '[Primal Rage] Has Started'
Event.OngoingPlayer
if(ModifierHasStarted(PRIMAL_RAGE_NAME))
{
  WaitUntilAlive();
  
  StartDuplicate();
}

rule: '[Primal Rage] Setup'
Event.OngoingPlayer
if(ModifierHasStarted(PRIMAL_RAGE_NAME))
if(IsDuplicatingFrozenReady())
{
  AllowButton(EventPlayer(), Button.Ultimate);
  SetUltimateCharge(EventPlayer(), 100);
  PressButton(EventPlayer(), Button.Ultimate);

  WaitUntilIsDeadOrModifierIsOver();

  SetMaxHealth(EventPlayer(), 100);
  StopDuplicate(EventPlayer(), IsAlive());
}

rule: '[Primal Rage] Press Button safeguard'
Event.OngoingPlayer
if(ModifierHasStarted(PRIMAL_RAGE_NAME))
if(IsDuplicatingFrozenReady())
if(UltimateChargePercent() == 100)
{
  PressButton(EventPlayer(), Button.Ultimate);
  Wait(0.1);
  LoopIfConditionIsTrue();
}

rule: '[Primal Rage] Set Max Health when Ultimate is active'
Event.OngoingPlayer
if(ModifierHasStarted(PRIMAL_RAGE_NAME))
if(IsUsingUltimate())
{
  SetMaxHealth(EventPlayer(), PRIMAL_RAGE_HEALTH / MaxHealth() * 100);
}
