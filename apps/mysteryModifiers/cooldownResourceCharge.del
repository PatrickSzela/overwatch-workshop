import '../../libs/utils/other.del';


playervar Number[] lastCooldowns = [];
playervar Number[] lastResources = [];
playervar Number[] lastCharges = [];

void SpeedUpCooldown(in Player player, in Button button, ref Boolean continueVar, in Number scalar = 2) {
  Number cooldown: AbilityCooldown(player, button);
  WaitUntil(cooldown > 0 || !continueVar, 999);
  AbortIfConditionIsFalse();

  player.lastCooldowns[allButtons.IndexOf(button)] = cooldown;

  WaitUntil(cooldown < player.lastCooldowns[allButtons.IndexOf(button)] || !continueVar, 999);

  Number diff: (player.lastCooldowns[allButtons.IndexOf(button)] - cooldown) * (scalar - 1);

  AbortIfConditionIsFalse();
  SetAbilityCooldown(player, button, cooldown - diff);
  LoopIfConditionIsTrue();
}


void SpeedUpResource(in Player player, in Button button, ref Boolean continueVar, in Number scalar = 2) {
  Number resource: AbilityResource(player, button);
  WaitUntil(resource < 100 || !continueVar, 999);
  AbortIfConditionIsFalse();

  player.lastResources[allButtons.IndexOf(button)] = AbilityResource(player, button);

  WaitUntil(AbilityResource(player, button) != player.lastResources[allButtons.IndexOf(button)] || !continueVar, 999);

  Number diff = (AbilityResource(player, button) - player.lastResources[allButtons.IndexOf(button)]) * (scalar - 1);
  if(diff <= 0) 
    LoopIfConditionIsTrue();

  AbortIfConditionIsFalse();
  SetAbilityResource(player, button, AbilityResource(player, button) + diff);
  LoopIfConditionIsTrue();
}

void SpeedUpUltimateCharge(in Player player, ref Boolean continueVar, in Number scalar = 2) {
  Number charge: UltimateChargePercent(player);
  WaitUntil(charge < 100 || !continueVar, 999);
  AbortIfConditionIsFalse();

  player.lastCharges[allButtons.IndexOf(Button.Ultimate)] = charge;

  WaitUntil(charge > player.lastCharges[allButtons.IndexOf(Button.Ultimate)] || !continueVar, 999);

  Number diff: (charge - player.lastCharges[allButtons.IndexOf(Button.Ultimate)]) * (scalar - 1);

  AbortIfConditionIsFalse();
  SetUltimateCharge(player, charge + diff);
  LoopIfConditionIsTrue();
}
