import '../../../libs/menu/components/text.del';
import '../../../libs/menu/components/checkbox.del';
import '../../../libs/utils/string.formatters.del';
import '../../../libs/utils/player.sortedAllPlayers.del';
import '../_variables.del';

String PAGE_SELECT_PLAYERS_ID: 'selectPlayers';
String PAGE_SELECT_PLAYERS_NAME: 'Select Players';

Component[] PageSelectPlayersItems() {
  Component[] list = [];
  Player[][] sorterPlayers = SortedAllPlayers();

  for(Number i! = 0; i < sorterPlayers.Length; i++) {    
    if(sorterPlayers[i].Length) {
      if(list.Length)
        list += new Text();

      list += new Text($"{i == 0 ? Team.Team1 : i == 1 ? Team.Team2 : Team.All}:");
      list.Last.color = i == 0 ? Color.Team1 : Color.Team2;
    }

    foreach(Player player! in sorterPlayers[i]) {
      Checkbox checkbox = new Checkbox(
        text: $"{player}",
        defaultChecked: selectedPlayers.Contains(player)
      );
      checkbox.textFormatter = (it) => $"{PlayerWithHeroIconFormatter(player)}â€‹ (Slot {SlotFormatter(SlotOf(player))})";
      checkbox.onChange = (checked, it) => {
        if(checked) selectedPlayers.ModAppend(player);
        else selectedPlayers.ModRemoveByValue(player);
      };

      list += checkbox;
    }
  }

  return list;
}

rule: 'Player Settings/Select Players'
Event.OngoingPlayer
if(menuState2.pageId == PAGE_SELECT_PLAYERS_ID)
{
  menuState2.CreatePage(PAGE_SELECT_PLAYERS_NAME, PageSelectPlayersItems());
}

// because `Event.OnPlayerJoin`/`Event.OnPlayerLeave` doesn't work with dummy bots...
rule: 'Player Settings/Select Players: Handle logic when Player joins or leaves'
Event.OngoingPlayer
if(menuState2.pageId == PAGE_SELECT_PLAYERS_ID)
{
  WaitUntil(AllPlayers() != EvaluateOnce(AllPlayers()), 99999);

  selectedPlayers = selectedPlayers.FilteredArray((i) => EntityExists(i));

  AbortIfConditionIsFalse();
  menuState2.Refresh();
  LoopIfConditionIsTrue();
}

rule: 'Player Settings/Select Players: Rerender when hero is swapped'
Event.OngoingPlayer
if(menuState2.pageId == PAGE_SELECT_PLAYERS_ID)
{
  WaitUntil(
    AllPlayers() == EvaluateOnce(AllPlayers()) && 
    AllPlayers().Map((i) => i.Hero()) != EvaluateOnce(AllPlayers().Map((i) => i.Hero())), 
  99999);

  // renaming bots waits 0.1s, wait a bit more
  Wait(0.2);

  AbortIfConditionIsFalse();
  menuState2.RerenderAllItems();
  LoopIfConditionIsTrue();
}
