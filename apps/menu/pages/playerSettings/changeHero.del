import '../../../../libs/menu/components/carousel.del';
import '../../../../libs/utils/string.formatters.del';
import '../../../../libs/utils/player.sendToHeroSelect.del';
import '../../_variables.del';

String PAGE_CHANGE_HERO_ID: 'changeHero';
String PAGE_CHANGE_HERO_NAME: 'Change Hero';

playervar Hero changeHero;

Component PageChangeHeroMenuItem() {
  Carousel carousel! = new Carousel(
    text: PAGE_CHANGE_HERO_NAME, 
    options: AllTankHeroes() + AllDamageHeroes() + AllSupportHeroes(),
    defaultValue: selectedPlayers.First.Hero()
  );

  carousel.valueFormatter = (it) => HeroWithIconFormatter(it.value);

  carousel.SetPrimaryAction("Apply", (it) => {
    selectedPlayers.changeHero = (<Carousel>it).value;
  });
  carousel.SetTertiaryAction("Add to timeline", (it) => {
    Timeline.AddAction(timeline, ACTION_ChangeHero(selectedPlayers, (<Carousel>it).value));
  });

  carousel.SetSecondaryAction("Send to Hero Select screen", (it) => {
    selectedPlayers.changeHero = null;
    SendToHeroSelect(selectedPlayers);
  });
  
  return carousel;
}

rule: 'Player Settings/Change Hero: Set hero (workaround for dummies)'
Event.OngoingPlayer
if(changeHero)
{
  WaitUntil(changeHero != null && changeHero != EventPlayer().Hero(), 99999);
  ForcePlayerHero(EventPlayer(), changeHero);
  Loop();
}
