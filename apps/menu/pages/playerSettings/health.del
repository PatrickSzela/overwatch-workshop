import '../../../../libs/menu/components/text.del';
import '../../../../libs/menu/components/toggle.del';
import '../../../../libs/menu/components/numberInput.del';
import '../../_variables.del';

String PAGE_HEALTH_ID: 'health';
String PAGE_HEALTH_NAME: 'Health';
String PAGE_HEALTH_CURRENT_HEALTH_ID: PAGE_HEALTH_ID + 'current';
String PAGE_HEALTH_CURRENT_HEALTH_NAME: 'Current Health';
String PAGE_HEALTH_MAX_HEALTH_ID: PAGE_HEALTH_ID + 'max';
String PAGE_HEALTH_MAX_HEALTH_NAME: 'Max Health';

playervar Boolean pageHealthAutoHeal = false;

// TODO: create health pool

Component[] PageHealthItems() {
  NumberInput currentHealth = new NumberInput(
    menuState: menuState, 
    text: PAGE_HEALTH_CURRENT_HEALTH_NAME,
    integralLength: 5,
    fractionalLength: 3,
    defaultValue: selectedPlayers.First.Health(),
    unit: ' HP'
  );
  currentHealth.SetPrimaryAction('Apply', (it) => {
    SetPlayerHealth(selectedPlayers, (<NumberInput>it).value);
  });
  currentHealth.SetTertiaryAction("Add to timeline", (it) => {
    Timeline.AddAction(timeline, ACTION_SetHealth(selectedPlayers, (<NumberInput>it).value));
  });

  NumberInput maxHealth = new NumberInput(
    menuState: menuState, 
    text: PAGE_HEALTH_MAX_HEALTH_NAME,
    integralLength: 5,
    fractionalLength: 3,
    defaultValue: selectedPlayers.First.MaxHealth(),
    unit: ' HP'
  );
  // who thought it was a good idea to use percentages when setting max health? and what's worse, percentages of original max health!?
  maxHealth.SetPrimaryAction("Apply", (it) => {
    SetMaxHealth(selectedPlayers, 100);
    MinWait();
    foreach(Player pl! in selectedPlayers) {
      SetMaxHealth(pl, (<NumberInput>it).value / pl.MaxHealth() * 100);
    }
  });
  maxHealth.SetSecondaryAction("Reset to Hero's original health", (it) => {
    SetMaxHealth(selectedPlayers, 100);
  });
  maxHealth.SetTertiaryAction("Add to timeline", (it) => {
    Timeline.AddAction(timeline, ACTION_SetMaxHealth(selectedPlayers, (<NumberInput>it).value));
  });
  maxHealth.AddDescription(Description.New("Applied Max Health value might differ because of Workshop limitations", COLOR_WARNING));
  
  Toggle autoHeal = new Toggle(
    text: "Auto Heal",
    defaultChecked: selectedPlayers[0].pageHealthAutoHeal
  );
  autoHeal.onChange = (checked, it) => {
    selectedPlayers.pageHealthAutoHeal = checked;
  };

  return [currentHealth, maxHealth, new Text(), autoHeal];
}

rule: 'Player Settings/Health' 50
Event.OngoingPlayer
if(menuState.pageId == PAGE_HEALTH_ID)
{
  menuState.CreatePage(
    title: PAGE_HEALTH_NAME, 
    items: PageHealthItems()
  );
}

rule: 'Player Settings/Health: Show Player Info'
Event.OngoingPlayer
if(menuState.isOpen)
if(menuState.pageId == PAGE_HEALTH_ID)
{
  playerInfoProps.Enable();

  WaitUntil(!menuState.isOpen || menuState.pageId != PAGE_HEALTH_ID, 99999);

  playerInfoProps.Disable();
}

rule: 'Auto heal'
Event.OngoingPlayer
if(pageHealthAutoHeal)
{
  SetPlayerHealth(EventPlayer(), EventPlayer().MaxHealth());

  WaitUntil(EventPlayer().Health() < EventPlayer().MaxHealth(), 99999);

  Wait(0.1);
  LoopIfConditionIsTrue();
}
