import '../../../../../libs/menu/components/link.del';
import './_rules.del';
import './_helpers.del';

String PAGE_ABILITIES_ID: 'abilities';
String PAGE_ABILITIES_NAME: 'Abilities';

// TODO: use workshop setting button

Component[] PageAbilitiesItems() {
  Component[] list = [];

  foreach(Button button! in allButtons) {
    list += new Link(menuState, $"{button}", submenuID: $"{button}", openButton: Button.Reload);
    list.Last.onSecondaryAction = (it) => {
      selectedButton = button;
    };
    list.Last.child = PageAbilitiesCarousel($"{button}", button);
  }

  return list;
}

rule: 'Player Settings/Abilities'
Event.OngoingPlayer
if(menuState.pageId == PAGE_ABILITIES_ID)
{
  menuState.CreatePage(
    title: PAGE_ABILITIES_NAME, 
    items: PageAbilitiesItems(), 
    descriptions: [
      Description.New("All Players have a list of currently pressed buttons above them", COLOR_INFO), 
      Description.New("To avoid potential bugs, you won't be able to trigger using abilities for yourself", COLOR_WARNING)
    ]
  );
}

rule: 'Player Settings/Abilities/Selected button'
Event.OngoingPlayer
if(menuState.HistoryContains(PAGE_ABILITIES_ID))
if(menuState.pageId == $"{selectedButton}")
{
  menuState.CreatePage(
    title: $"{selectedButton}",
    items: PageAbilitiesMenuItemsGenerator(selectedButton), 
    descriptions: [
      Description.New(PAGE_ABILITIES_WARNING_BROKEN, COLOR_WARNING)
    ]
  );
}
