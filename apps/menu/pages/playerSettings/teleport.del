import './_teleportLookAtHelper.del';
import '../../_variables.del';

String PAGE_TELEPORT_ID: 'teleport';
String PAGE_TELEPORT_NAME: 'Teleport to';

rule: 'Player Settings/Teleport' 50
Event.OngoingPlayer
if(menuState.pageId == PAGE_TELEPORT_ID)
{
  menuState.CreatePage(
    title: PAGE_TELEPORT_NAME, 
    items: PageTeleportLookAtItems(
      id: PAGE_TELEPORT_ID, 
      name: PAGE_TELEPORT_NAME, 
      isLookAt: false
    )
  );
}

rule: 'Player Settings/Look At: Start/Stop looking at'
Event.OngoingPlayer
{
  WaitForeverUntil(pageTeleportSettings != EvaluateOnce(pageTeleportSettings));

  pageTeleportSettings.forceRefresh = false;

  DetachPlayers(EventPlayer());
  StopForcingPlayerPosition(EventPlayer());

  Vector | Player pos: TeleportLookAtPosition(pageTeleportSettings.choice, pageTeleportSettings.value, false);

  if(pageTeleportSettings.variant == PageTeleportLookAtVariant.ONCE) {
    Teleport(EventPlayer(), pos);
  } else if(pageTeleportSettings.variant == PageTeleportLookAtVariant.OVER_TIME) {
    if(pageTeleportSettings.choice == PageTeleportLookAtChoice.PLAYER) {
      AttachPlayers(EventPlayer(), pos);
    } else {
      StartForcingPlayerPosition(EventPlayer(), pos, true);
    }
  }

  Loop();
}

rule: 'Player Settings/Teleport: Show Player Info'
Event.OngoingPlayer
if(menuState.isOpen)
if(menuState.pageId == PAGE_TELEPORT_ID)
{
  playerInfoProps.Enable();
  playerInfoProps.EnableTransform();

  WaitForeverUntil(!menuState.isOpen || menuState.pageId != PAGE_TELEPORT_ID);

  playerInfoProps.Disable();
  playerInfoProps.DisableTransform();
}
