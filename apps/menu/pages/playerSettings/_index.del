import '../../_variables.del';
import './changeHero.del';
import './teleport.del';
import './lookAt.del';
import './status.del';
import './health.del';
import './abilities/_index.del';
import './kill.del';
import './resurrect.del';
import './respawn.del';
import './remove.del';
import './menuAccess.del';

String PAGE_PLAYER_SETTINGS_ID: 'playerSettings';
String PAGE_PLAYER_SETTINGS_NAME: 'Player Settings';

Component[] PagePlayerSettingsItems() {
  return [
    PageChangeHeroMenuItem(),
    new Link(menuState, PAGE_TELEPORT_NAME, PAGE_TELEPORT_ID),
    new Link(menuState, PAGE_LOOK_AT_NAME, PAGE_LOOK_AT_ID),
    new Link(menuState, PAGE_STATUS_NAME, PAGE_STATUS_ID),
    new Link(menuState, PAGE_HEALTH_NAME, PAGE_HEALTH_ID),
    new Link(menuState, PAGE_ABILITIES_NAME, PAGE_ABILITIES_ID),
    PageKillMenuItem(),
    PageResurrectMenuItem(),
    PageRespawnMenuItem(),
    PageRemoveMenuItem(),
    PageMenuAccessMenuItem()
  ];
}

rule: 'Player Settings'
Event.OngoingPlayer
if(menuState.pageId == PAGE_PLAYER_SETTINGS_ID)
{
  menuState.CreatePage(
    title: PAGE_PLAYER_SETTINGS_NAME, 
    items: PagePlayerSettingsItems()
  );
}
