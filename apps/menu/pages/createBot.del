import '../_variables.del';
import '../../../libs/utils/string.formatters.del';
import '../../../libs/utils/team.availableTeams.del';
import '../../../libs/menu/components/carousel.del';
import '../../../libs/menu/components/text.del';

String PAGE_CREATE_BOT_ID: 'createBot';
String PAGE_CREATE_BOT_NAME: 'Create Bot';

String PAGE_CREATE_BOT_HERO_ID: PAGE_CREATE_BOT_ID + 'hero';
String PAGE_CREATE_BOT_HERO_NAME: 'Hero';
String PAGE_CREATE_BOT_TEAM_ID: PAGE_CREATE_BOT_ID + 'team';
String PAGE_CREATE_BOT_TEAM_NAME: 'Team';
String PAGE_CREATE_BOT_SLOT_ID: PAGE_CREATE_BOT_ID + 'slot';
String PAGE_CREATE_BOT_SLOT_NAME: 'Slot';
String PAGE_CREATE_BOT_POSITION_ID: PAGE_CREATE_BOT_ID + 'position';
String PAGE_CREATE_BOT_POSITION_NAME: 'Position';
String PAGE_CREATE_BOT_SPAWN_ID: PAGE_CREATE_BOT_ID + 'spawn';
String PAGE_CREATE_BOT_SPAWN_NAME: 'Spawn bot';

// TODO: store this data in a struct
// TODO: add warning if player in that slot and on that team already exists
playervar Hero spawnBotHero = Hero.Reinhardt;
playervar Team spawnBotTeam = Team.Team1;
playervar Number spawnBotSlot = -1;
playervar Vector spawnBotPosition = null;
globalvar Number createdBotsIdx = 0;
playervar Number botIdx = 0;
// workaround because the bots will have their original names on client-side
playervar String playerName = $"{EventPlayer()}";

Component[] PageCreateBotItems() {
  Carousel hero = new Carousel(
    text: PAGE_CREATE_BOT_HERO_NAME,
    options: AllTankHeroes() + AllDamageHeroes() + AllSupportHeroes(),
    defaultValue: spawnBotHero
  );
  hero.onChange = (value, it) => spawnBotHero = value;
  hero.valueFormatter = (it) => HeroWithIconFormatter(it.value);

  Carousel team = new Carousel(
    text: PAGE_CREATE_BOT_TEAM_NAME,
    options: availableTeams,
    defaultValue: spawnBotTeam
  );
  team.onChange = (value, it) => spawnBotTeam = value;

  Carousel slot = new Carousel(
    text: PAGE_CREATE_BOT_SLOT_NAME,
    options: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
    defaultValue: spawnBotSlot
  );
  slot.valueFormatter = (it) => SlotFormatter(it.value);
  slot.onChange = (value, it) => spawnBotSlot = value;

  ComponentWithValue position = new ComponentWithValue(PAGE_CREATE_BOT_POSITION_NAME, spawnBotPosition);
  position.AddDescription(Description.New(PickPosition.CHANGE_DISTANCE_DESCRIPTION));
  
  position.onEnter = (it) => {
    pickPosition.Enable(Color.Red);
  };
  position.onLeave = (it) => {
    pickPosition.Disable();
  };
  position.onButtonDown = (button, it) => {
    pickPosition.ChangeDistance(button);
  };
  position.SetPrimaryAction("Choose the position", (it) => {
    spawnBotPosition = pickPosition.position;
    (<ComponentWithValue>it).SetValue(spawnBotPosition);
  });

  Component spawnBot = new Component(PAGE_CREATE_BOT_SPAWN_NAME);
  spawnBot.SetPrimaryAction("Spawn the bot", (it) => {
    Player bot! = CreateDummyBot(spawnBotHero, spawnBotTeam, spawnBotSlot, spawnBotPosition);

    if(!EntityExists(bot)) {
      SmallMessage(EventPlayer(), "Failed to create a bot");
    }
  });

  return [hero, team, slot, position, new Text(), spawnBot];
}

rule: 'Create Bot'
Event.OngoingPlayer
if(menuState.pageId == PAGE_CREATE_BOT_ID)
{
  if(!spawnBotPosition)
    spawnBotPosition = PickPosition.RayCast(EventPlayer());

  menuState.CreatePage(PAGE_CREATE_BOT_NAME, PageCreateBotItems());
}

rule: 'Create Bot: Create Sphere'
Event.OngoingPlayer
if(menuState.isOpen)
if(menuState.pageId == PAGE_CREATE_BOT_ID)
{
  pickPosition.CreateAdditionalSphere(
    color: Color.Green,
    position: spawnBotPosition,
    text: $"Spawn position: {spawnBotPosition}"
  );

  WaitUntil(menuState.pageId != PAGE_CREATE_BOT_ID || !menuState.isOpen, 99999);

  pickPosition.DestroyAdditionalSpheres();
}

rule: 'Create Bot: Set Name'
Event.OngoingPlayer
if(IsDummyBot(EventPlayer()))
{
  // workaround for a bug that uses old hero info in `StartForcingDummyBotName`
  Wait(0.1);

  if(!botIdx) {
    createdBotsIdx += 1;
    botIdx = createdBotsIdx;
  }

  playerName = $"[BOT {botIdx}] {EventPlayer().Hero()}";

  StartForcingDummyBotName(EventPlayer(), playerName);

  WaitUntil(EvaluateOnce(EventPlayer().Hero()) != EventPlayer().Hero(), 99999);
  LoopIfConditionIsTrue();
}
