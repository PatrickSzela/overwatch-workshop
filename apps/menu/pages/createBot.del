import '../_variables.del';
import '../../../libs/utils/other.del';
import '../../../libs/utils/formatters.del';

String PAGE_CREATE_BOT_ID: 'createBot';
String PAGE_CREATE_BOT_NAME: 'Create Bot';

String PAGE_CREATE_BOT_HERO_ID: PAGE_CREATE_BOT_ID + 'hero';
String PAGE_CREATE_BOT_HERO_NAME: 'Hero';
String PAGE_CREATE_BOT_TEAM_ID: PAGE_CREATE_BOT_ID + 'team';
String PAGE_CREATE_BOT_TEAM_NAME: 'Team';
String PAGE_CREATE_BOT_SLOT_ID: PAGE_CREATE_BOT_ID + 'slot';
String PAGE_CREATE_BOT_SLOT_NAME: 'Slot';
String PAGE_CREATE_BOT_POSITION_ID: PAGE_CREATE_BOT_ID + 'position';
String PAGE_CREATE_BOT_POSITION_NAME: 'Position';
Button PAGE_CREATE_BOT_POSITION_BUTTON_SELECT: Button.Ability2;
String PAGE_CREATE_BOT_SPAWN_ID: PAGE_CREATE_BOT_ID + 'spawn';
String PAGE_CREATE_BOT_SPAWN_NAME: 'Spawn bot';
Button PAGE_CREATE_BOT_SPAWN_BUTTON: Button.Ability2;

// TODO: remember position & other values when exiting (same for other menus)
// TODO: store in array
// TODO: add warning if player in that slot and on that team already exists
playervar Hero spawnBotHero = Hero.Reinhardt;
playervar Team spawnBotTeam = Team.Team1;
playervar Number spawnBotSlot = -1;
playervar Vector spawnBotPosition = null;

MenuItem[] PageCreateBotItems() {
  Carousel heroCarousel = new Carousel(
    text: PAGE_CREATE_BOT_HERO_NAME,
    options: AllTankHeroes() + AllDamageHeroes() + AllSupportHeroes(),
    defaultValue: spawnBotHero
  );
  heroCarousel.onChange = (value, it) => spawnBotHero = value;
  heroCarousel.valueFormatter = (it) => HeroWithIconFormatter(it.value);

  MenuItem hero = new MenuItem(child: heroCarousel);

  Carousel teamCarousel = new Carousel(
    text: PAGE_CREATE_BOT_TEAM_NAME,
    options: availableTeams,
    defaultValue: spawnBotTeam
  );
  teamCarousel.onChange = (value, it) => spawnBotTeam = value;

  MenuItem team = new MenuItem(child: teamCarousel);

  Carousel slotCarousel = new Carousel(
    text: PAGE_CREATE_BOT_SLOT_NAME,
    options: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
    defaultValue: spawnBotSlot
  );
  slotCarousel.valueFormatter = (it) => SlotFormatter(it.value);
  slotCarousel.onChange = (value, it) => spawnBotSlot = value;

  MenuItem slot = new MenuItem(child: slotCarousel);

  MenuItem position = new MenuItem(PAGE_CREATE_BOT_POSITION_NAME);
  position.AddDescription(PickPosition.CHANGE_DISTANCE_DESCRIPTION);
  position.AddDescription($"Press {ButtonFormatterSingle(PAGE_CREATE_BOT_POSITION_BUTTON_SELECT)}​ to select the position");
  position.textFormatter = (it) => $"{it.text}: {spawnBotPosition}";
  position.onEnter = (it) => {
    pickPosition.Enable(Color.Red);
  };
  position.onLeave = (it) => {
    pickPosition.Disable();
  };
  position.onButtonDown = (button, it) => {
    pickPosition.ChangeDistance(button);

    if(buttonsHeld == [Button.Ability2])
      spawnBotPosition = pickPosition.position;
  };

  MenuItem spawnBot = new MenuItem(PAGE_CREATE_BOT_SPAWN_NAME);
  spawnBot.AddDescription($"Press {ButtonFormatterSingle(PAGE_CREATE_BOT_SPAWN_BUTTON)}​ to spawn the bot");
  spawnBot.onButtonDown = (button, it) => {
    if(buttonsHeld == [Button.Ability2]) {
      CreateDummyBot(spawnBotHero, spawnBotTeam, spawnBotSlot, spawnBotPosition);
      if(!IsDummyBot(LastCreatedEntity()))
        SmallMessage(EventPlayer(), "Failed to create a bot");
    }
  };

  return [hero, team, slot, position, new MenuItemNonInteractive(), spawnBot];
}

rule: 'Create Bot'
Event.OngoingPlayer
if(menuState.currentMenuID == PAGE_CREATE_BOT_ID)
{
  if(!spawnBotPosition)
    spawnBotPosition = PickPosition.RayCast(EventPlayer());

  menuState.SetTitle(PAGE_CREATE_BOT_NAME);
  menuState.AddItems(PageCreateBotItems());
}

rule: 'Create Bot: Create Sphere'
Event.OngoingPlayer
if(menuState.isOpen)
if(menuState.currentMenuID == PAGE_CREATE_BOT_ID)
{
  pickPosition.CreateAdditionalSphere(
    color: Color.Green,
    position: spawnBotPosition,
    text: $"Spawn position: {spawnBotPosition}"
  );

  WaitUntil(menuState.currentMenuID != PAGE_CREATE_BOT_ID || !menuState.isOpen, 99999);

  pickPosition.DestroyAdditionalSpheres();
}

rule: 'Create Bot: Set Name'
Event.OnPlayerJoin
{
  // fix first spawn
  MinWait();

  playerName = $"[BOT] {EventPlayer().Hero()}";
  StartForcingDummyBotName(EventPlayer(), playerName);

  WaitUntil(EvaluateOnce(EventPlayer().Hero()) != EventPlayer().Hero(), 99999);
  LoopIfConditionIsTrue();
}
