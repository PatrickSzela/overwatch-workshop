import '../../../../libs/utils/vector.del';
import '../../_variables.del';

String PAGE_DIAGNOSTICS_ID: 'diagnostics';
String PAGE_DIAGNOSTICS_NAME: 'Diagnostics';

playervar Boolean showDiagnostics = false;

MenuItem PageDiagnosticsMenuItem() {
  Toggle toggle = new Toggle(
    text: PAGE_DIAGNOSTICS_NAME,
    defaultChecked: showDiagnostics
  );
  toggle.onChange = (checked, it) => {
    showDiagnostics = checked;
  };

  MenuItem menuItem = new MenuItem(child: toggle);

  return new MenuItem(child: menuItem);
}

void StatusHelper(in String text, in Number value, in Number colorRed, in Number colorOrange) {
  CreateHudText(
    VisibleTo: LocalPlayer().showDiagnostics ? LocalPlayer() : null, 
    Subheader: text, 
    Location: Location.Right,
    SubheaderColor: 
      value >= colorRed ? Color.Red : 
      value >= colorOrange ? Color.Orange : 
      Color.White,
    Reevaluation: HudTextRev.VisibleToSortOrderStringAndColor);
}

rule: 'Status'
{
  StatusHelper($"Server Load: {ServerLoad()}%", ServerLoad(), 100, 80);
  StatusHelper($"Server Load Peak: {ServerLoadPeak()}%", ServerLoadPeak(), 100, 80);
  StatusHelper($"Class Memory Used: {ClassMemoryUsed()}/1000", ClassMemoryUsed(), 900, 800);
  StatusHelper($"Text count: {TextCount()}/128", TextCount(), 112, 96);
  StatusHelper($"Entity count: {EntityCount()}/128", EntityCount(), 112, 96);
}