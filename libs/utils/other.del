globalvar Button[] allButtons = [
  Button.PrimaryFire,
  Button.SecondaryFire,
  Button.Ability1,
  Button.Ability2,
  Button.Ultimate,
  Button.Reload,
  Button.Melee,
  Button.Jump,
  Button.Crouch,
  Button.Interact
];

Boolean IsUsingAbility(Player player, Button button):
  // button == Button.PrimaryFire ? IsFiringPrimary(player) :
  // button == Button.SecondaryFire ? IsFiringSecondary(player) :
  button == Button.Ability1 ? IsUsingAbility1(player) :
  button == Button.Ability2 ? IsUsingAbility2(player) :
  button == Button.Ultimate ? IsUsingUltimate(player) :
  button == Button.Reload ? IsReloading(player) :
  button == Button.Melee ? IsMeleeing(player) :
  button == Button.Jump ? IsJumping(player) :
  button == Button.Crouch ? IsCrouching(player) : false;

globalvar String[] alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];

Player[][] SortedAllPlayers() "Sorted All Players" {
  Player[][] perTeam! = [[], [], []];

  foreach(Player player! in AllPlayers()) {
    perTeam[TeamOf(player) == Team.Team1 ? 0 : TeamOf(player) == Team.Team2 ? 1 : 2] += player;
  }

  for(Number i! = 0; i < perTeam.Length; i++)
    perTeam[i] = perTeam[i].SortedArray((c) => SlotOf(c));

  return perTeam;
}

Player[] SortedAllPlayersFlat() "Sorted All Players Flat" {
  return AllPlayers().SortedArray((i) => (TeamOf(i) == Team.Team1 ? 0 : TeamOf(i) == Team.Team2 ? 100 : 10000) + SlotOf(i));
}

globalvar Team[] availableTeams = [GameMode.BountyHunter, GameMode.Deathmatch, GameMode.SnowballDeathmatch].Contains(CurrentGameMode()) ? [Team.All] : [Team.Team1, Team.Team2];