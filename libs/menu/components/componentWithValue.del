import './component.del';

// unfortunately OSTW doesn't really like generic classes in callbacks ðŸ˜ž
class ComponentWithValue: Component 
{
  public Any value;

  public ((ComponentWithValue) => String) valueFormatter;
  public static ((ComponentWithValue) => String) VALUE_FORMATTER: (it) => it.value;
  
  public ((Any, ComponentWithValue) => void) onChange;

  public constructor(
    in String text,
    in Any defaultValue = null
  ) {
    ComponentWithValueConstructor(text, defaultValue, null);
  }

  protected void ComponentWithValueConstructor(
    String text!,
    Any defaultValue! = null,
    Component child! = null
  ) "[ComponentWithValue] Constructor" {
    ComponentConstructor(text, child);

    this.value = defaultValue;
    this.valueFormatter = VALUE_FORMATTER;
  }

  public override void Render() "[ComponentWithValue] Render" {
    onRender(this);
    renderedText = $"{text}: {valueFormatter(this)}";
  }

  public virtual void SetValue(Any value!) "[ComponentWithValue] Set Value" {
    if(this.value != value) {
      this.value = value;
      OnChange();
    }
  }

  // events
  public virtual void OnChange() "[ComponentWithValue] OnChange" {
    shouldRerender = true;
    onChange(value, this);
  }
}