import './component.del';

class Link {
  public static Component New(
    in String label,
    in String submenuID,
    in Description[] descriptions = [],
    in Color color = COLOR_NEUTRAL,
    in Button button = BUTTON_PRIMARY,
    in Number childIndex = null
  ): Component.New(
    type: ComponentType.Link,
    label: label,
    value: submenuID,
    descriptions: [
      Description.New($"Press {ButtonFormatterSingle_Underscores(button)}​ to open submenu", order: ButtonDescriptionOrder(button))
    ],
    button: button,
    childIndex: childIndex
  );

  public static String Render(ref Component component) {
    return $"{menuComponents[component.childIndex].renderedText || component.label}​ ▶";
  }

  // public override void Render() "[Link] Render" {
  //   onRender(this);
  //   renderedText = $"{child.renderedText || text}​ ▶";
  // }

  // public override void OnButtonDown(Button button!) "[Link] OnButtonDown" {
  //   onButtonDown(button, this);

  //   HandleActions();

  //   if(buttonsHeld == [openButton])
  //     _menuState.GoTo(submenuID);
  //   else if(child)
  //     child.OnButtonDown(button);
  // }
}
